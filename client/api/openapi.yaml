openapi: 3.0.2
info:
  contact:
    url: https://groups.google.com/forum/#!forum/moov-users
  description: Moov Accounts is an HTTP service which represents both a general ledger
    and chart of accounts for customers. The service is designed to abstract over
    various core systems and provide a uniform API for developers.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Accounts API
  version: 1.0.0
servers:
- description: Local development
  url: http://localhost:8085
tags:
- description: |
    Accounts endpoints cover both Customers and their Accounts at a Financial Instittuion.
     - A customer is a single individual who can own account's. Customers need to be verified via KYC before they can make transactions or own accounts.
     - An account is financial institution account associated with a single customer
  name: Accounts
paths:
  /ping:
    get:
      operationId: ping
      responses:
        200:
          description: Service is running properly
      summary: Ping the Accounts service to check if running
      tags:
      - Accounts
  /accounts/search:
    get:
      description: Find accounts which match all specified query parameters
      operationId: searchAccounts
      parameters:
      - description: Account number
        explode: true
        in: query
        name: number
        required: false
        schema:
          example: "2151"
          type: string
        style: form
      - description: ABA routing number for the Financial Institution
        explode: true
        in: query
        name: routingNumber
        required: false
        schema:
          example: "69100013"
          type: string
        style: form
      - description: Account type
        explode: true
        in: query
        name: type
        required: false
        schema:
          example: Checking
          type: string
        style: form
      - description: Customer ID associated to accounts
        explode: true
        in: query
        name: customerID
        required: false
        schema:
          example: cb9012eb
          type: string
        style: form
      - description: Optional Request ID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Moov User ID header, required in all requests
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
          description: An Account object that matches all query parameters
        404:
          description: No account found for provided query parameters
      summary: Search for Accounts
      tags:
      - Accounts
  /accounts/transactions:
    post:
      description: |
        Post a transaction against multiple accounts. All transaction lines must sum to zero. No money is created or destroyed in a transaction - only moved from account to account. Accounts can be referred to in a Transaction without creating them first.
      operationId: createTransaction
      parameters:
      - description: Optional Request ID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Moov User ID header, required in all requests
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransaction'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Transaction successfully created against the account(s)
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Transaction was not created, see error(s)
      summary: Create Transaction
      tags:
      - Accounts
  /accounts/{accountID}/transactions:
    get:
      description: Get transactions for an account. Ordered descending from their
        posted date.
      operationId: getAccountTransactions
      parameters:
      - description: Account ID
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          example: 098f3653-1dcb-4358-903e-4c7576f957f6
          type: string
        style: simple
      - description: Maximum number of transactions to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          example: 25
          type: number
        style: form
      - description: Optional Request ID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Moov User ID header, required in all requests
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transactions'
          description: List of transactions
      summary: Get Account transactions
      tags:
      - Accounts
  /accounts/transactions/{transactionID}/reversal:
    post:
      description: Reverse a transaction by debiting the credited and crediting the
        debited amounts among all accounts involved.
      operationId: reverseTransaction
      parameters:
      - description: Transaction ID
        explode: false
        in: path
        name: transactionID
        required: true
        schema:
          example: 3e2f66e2
          type: string
        style: simple
      - description: Optional Request ID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Moov User ID header, required in all requests
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Transaction reversal success
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to reverse the specified transaction, check error(s).
      summary: Reverse a transaction
      tags:
      - Accounts
  /accounts:
    post:
      description: Create an account for a Customer. Leaving the number blank will
        generate a random value.
      operationId: createAccount
      parameters:
      - description: Optional Request ID allows application developer to trace requests
          through the systems logs
        example: rs4f9915
        explode: false
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
        style: simple
      - description: Moov User ID header, required in all requests
        example: e3cdf999
        explode: false
        in: header
        name: X-User-ID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccount'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: The created Account model
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid user information, check error(s).
        500:
          description: Internal error, check error(s) and report the issue.
      summary: Create Account
      tags:
      - Accounts
components:
  schemas:
    CreateAccount:
      example:
        number: "12345"
        balance: 1000
        customerID: 0c584689
        name: Super Checking
        type: Checking
      properties:
        customerID:
          description: Customer ID associated with accounts
          example: 0c584689
          type: string
        balance:
          description: Initial balance of account in USD cents. This amount is to
            be deposited from an account at another Financial Institution or in-person
            (i.e. cash) on account creation.
          example: 1000
          type: integer
        name:
          description: Caller defined label for this account.
          example: Super Checking
          type: string
        number:
          description: Random number to be used as unique to distinguish this Account
          example: "12345"
          type: string
        type:
          description: Product type of the account
          enum:
          - Checking
          - Savings
          - FBO
          type: string
      required:
      - balance
      - customerID
      - name
      - type
      type: object
    Account:
      example:
        accountNumberMasked: "4321"
        balanceAvailable: 850
        accountNumber: "987654321"
        type: Checking
        balancePending: 100
        routingNumber: "073000176"
        createdAt: 2016-08-29T09:12:33.001Z
        balance: 1000
        customerID: e210a9d6-d755-4455-9bd2-9577ea7e1081
        name: Super Checking
        ID: d290f1ee-6c54-4b01-90e6-d701748f0851
        lastModified: 2016-08-29T09:12:33.001Z
        closedAt: 2000-01-23T04:56:07.000+00:00
        status: Open
      properties:
        ID:
          description: The unique identifier for an account
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          type: string
        customerID:
          description: The unique identifier for the customer who owns the account
          example: e210a9d6-d755-4455-9bd2-9577ea7e1081
          format: uuid
          type: string
        name:
          description: Caller defined label for this account.
          example: Super Checking
          type: string
        accountNumber:
          description: A unique Account number at the bank.
          example: "987654321"
          maximum: 17
          minimum: 8
          type: string
        accountNumberMasked:
          description: Last four digits of an account number
          example: "4321"
          maximum: 4
          minimum: 4
          type: string
        routingNumber:
          description: Routing Transit Number is a nine-digit number assigned by the
            ABA
          example: "073000176"
          maximum: 9
          minimum: 9
          type: string
        status:
          description: Status of the account being created.
          enum:
          - Open
          - Closed
          type: string
        type:
          description: Product type of the account
          enum:
          - Checking
          - Savings
          - FBO
          type: string
        createdAt:
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
        closedAt:
          format: date-time
          type: string
        lastModified:
          description: Last time the object was modified except balances
          example: 2016-08-29T09:12:33.001Z
          format: date-time
          type: string
        balance:
          description: Total balance of account in USD cents.
          example: 1000
          type: integer
        balanceAvailable:
          description: Balance available in USD cents to be drawn
          example: 850
          type: integer
        balancePending:
          description: Balance of pending transactions in USD cents
          example: 100
          type: integer
      type: object
    Accounts:
      items:
        $ref: '#/components/schemas/Account'
      type: array
    CreatePhone:
      properties:
        number:
          description: phone number
          example: +1.818.555.1212
          type: string
        type:
          enum:
          - Home
          - Mobile
          - Work
          type: string
      required:
      - number
      - type
    Phone:
      properties:
        number:
          description: phone number
          example: +1.818.555.1212
          type: string
        valid:
          description: phone number has been validated to connect with customer
          type: boolean
        type:
          enum:
          - Home
          - Mobile
          - Work
          type: string
    CreateAccountAddress:
      properties:
        type:
          enum:
          - Primary
          - Secondary
          type: string
        address1:
          description: First line of the address
          type: string
        address2:
          description: Second line of the address
          type: string
        city:
          type: string
        state:
          description: two charcer code of US state
          maximum: 2
          minimum: 2
          type: string
        postalCode:
          type: string
        country:
          enum:
          - US
          type: string
      required:
      - address1
      - address2
      - city
      - country
      - postalCode
      - state
      - type
      type: object
    AccountAddress:
      properties:
        type:
          enum:
          - Primary
          - Secondary
          type: string
        address1:
          description: First line of the address
          type: string
        address2:
          description: Second line of the address
          type: string
        city:
          type: string
        state:
          description: two charcer code of US state
          maximum: 2
          minimum: 2
          type: string
        postalCode:
          type: string
        country:
          enum:
          - US
          type: string
        validated:
          description: Address has been validated for customer
          type: boolean
        active:
          description: Address is currently being used for customer
          type: boolean
      type: object
    CreateTransaction:
      example:
        lines:
        - accountID: baa835b8
          amount: 2500
          purpose: Transfer
        - accountID: baa835b8
          amount: 2500
          purpose: Transfer
      properties:
        lines:
          items:
            $ref: '#/components/schemas/TransactionLine'
          type: array
    Transaction:
      example:
        ID: 140fa826
        lines:
        - accountID: baa835b8
          amount: 2500
          purpose: Transfer
        - accountID: baa835b8
          amount: 2500
          purpose: Transfer
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        ID:
          description: Unique ID of a transaction
          example: 140fa826
          type: string
        timestamp:
          format: date-time
          type: string
        lines:
          items:
            $ref: '#/components/schemas/TransactionLine'
          type: array
    Transactions:
      items:
        $ref: '#/components/schemas/Transaction'
      type: array
    TransactionLine:
      example:
        accountID: baa835b8
        amount: 2500
        purpose: Transfer
      properties:
        accountID:
          description: Account ID
          example: baa835b8
          type: string
        purpose:
          enum:
          - Transfer
          - Fee
          - Interest
          - Wire
          - ACHDebit
          - ACHCredit
          type: string
        amount:
          description: Change in account balance (in USD cents)
          example: 2500
          type: number
    Error:
      properties:
        error:
          description: An error message describing the problem intended for humans.
          example: Validation error(s) present.
          type: string
      required:
      - error
